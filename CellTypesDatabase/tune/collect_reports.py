'''
Helper script for analysing the tuned model reports generated by tuneAllen.py
'''
import os
import shutil

import json

dirs = os.listdir('.')

for dir in dirs:
    if 'NT_' in dir:
        rep = '%s/report.json'%dir
        if os.path.isfile(rep):
            to = 'reports/%s__report.json'%dir
            print("Copying %s to %s"%(rep,to))
            shutil.copyfile(rep,to)
            

reports = {}

for rep in os.listdir('reports'):
    
    if rep.endswith('json'):
        f = "reports/%s"%rep
        print("Loading in: %s"%f)
        s = open(f, 'r').read()
        reports[rep] = eval(s)
print("\n*********************************\n")

p =[]
f = []
m = []
c = []

for r in reports:
    rep = reports[r]
    ptype = rep['Prototype'] if rep['Prototype']!='Izhikevich' else 'Izh'
    print("%s:\t%s %s\t %s(p%s)\t%s"%(r,ptype,rep['dataset'],rep['max_evaluations'],rep['population_size'],rep['fitness']))
    p.append([rep['population_size']])
    f.append([rep['fitness']])
    m.append('.' if rep['Prototype']=='Izhikevich' else 'x')
    c.append('k' if rep['Prototype']=='Izhikevich' else 'r')
    
print p
print f
print m
print c
from pyneuroml import pynml
pynml.generate_plot(p,                        # Add 2 sets of x values
                         f,                   # Add 2 sets of y values
                         "Some traces",                  # Title
                         markers = m,
                         colors = c,
                         logx = True,
                         logy = True,
                         show_plot_already=True)    

      
