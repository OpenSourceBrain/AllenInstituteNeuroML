usegui = 1

{load_file("stdlib.hoc")}
{load_file("stdgui.hoc")}


create Soma
access Soma

celsius = 34

Soma {pt3dclear() pt3dadd(0.0, 0, 0.0, 9.923) pt3dadd(0.0, 9.923, 0.0, 9.923)}

define_shape()

forall Ra = 63.36

insert pas
{ g_pas=0.000153169 }
{ e_pas=-99.7317 }

insert NaTs 
{ gbar_NaTs=0.831809}

insert NaV
{ gbar_NaV=0.1}

insert na_ion 
{ ena=53}

insert K_P 
{ gbar_K_P=0.0198868}

insert K_T 
{ gbar_K_T=6.5088e-05}


insert Kv3_1 
{ gbar_Kv3_1=0.0281648}

insert SK 
{ gbar_SK=0.0000797996}

insert k_ion 
{ ek=-107}

insert Ih 
{ gbar_Ih=8.61267e-06}

insert Im 
{ gbar_Im=0.0079231}



insert Nap 
{ gbar_Nap=0.000115828}
/*
*/

insert Ca_HVA 
{ gbar_Ca_HVA=2.69146e-05}
insert Ca_LVA 
{ gbar_Ca_LVA=0.000783165}
insert CaDynamics 
{ gamma_CaDynamics=0.0264831 decay_CaDynamics=739.8 depth_CaDynamics=0.1 minCai_CaDynamics=0.0001}


proc initialiseValues0() {

    forall  v = -90

}

objref fih0
{fih0 = new FInitializeHandler(0, "initialiseValues0()")}

objref stim1 
objref stim2 


Soma {
    stim1 = new IClamp(0.5)
    stim1.del = 100.0
    stim1.dur = 100.0
    stim1.amp = -0.01
    
    stim2 = new IClamp(0.5)
    stim2.del = 300.0
    stim2.dur = 100.0
    stim2.amp = 0.05
}



tstop = 600.0
dt = 0.001


objref v_time
objref f_time

v_time = new Vector()
{ v_time.record(&t) }
//{ v_time.resize(70001) } // false
f_time = new File()


objref Soma_v
{ Soma_v = new Vector() }
{ Soma_v.record(&Soma.v(0.5))} 
objref Soma_ca
{ Soma_ca = new Vector() }
{ Soma_ca.record(&Soma.cai(0.5))} 

objref f_Soma_v


objref GraphWin_0
objref GraphWin_1
objref GraphWin_1a
objref GraphWin_2
objref GraphWin_3

if (usegui==1) {
    GraphWin_0 = new Graph(0)
    {GraphWin_0.size(0, tstop,-110.0,50.0)}
    {GraphWin_0.view(0, -110.0, tstop, 160.0, 80, 330, 330, 250)}
    {
        GraphWin_0.addexpr("Soma.v", "Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_0)
    }

    GraphWin_1 = new Graph(0)
    {GraphWin_1.size(0, tstop,-0.1,1.1)}
    {GraphWin_1.view(0, -0.1, tstop, 1.2, 80, 330, 330, 250)}
    {
        GraphWin_1.addexpr("m_Ca_HVA", "m_Ca_HVA", 3, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("h_Ca_HVA", "h_Ca_HVA", 4, 1, 0.8, 0.9, 2)
        
        GraphWin_1.addexpr("m_Ca_LVA", "m_Ca_LVA", 5, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("h_Ca_LVA", "h_Ca_LVA", 6, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_1)
    }

    GraphWin_1a = new Graph(0)
    {GraphWin_1a.size(0, tstop,-0.1,1.1)}
    {GraphWin_1a.view(0, -0.1, tstop, 1.2, 80, 330, 330, 250)}
    {
        GraphWin_1a.addexpr("m_NaTs", "m_NaTs", 3, 1, 0.8, 0.9, 2)
        GraphWin_1a.addexpr("h_NaTs", "h_NaTs", 4, 1, 0.8, 0.9, 2)

        GraphWin_1a.addexpr("mInf_Nap", "mInf_Nap", 5, 1, 0.8, 0.9, 2)
        GraphWin_1a.addexpr("h_Nap", "h_Nap", 6, 1, 0.8, 0.9, 2)


        GraphWin_1a.addexpr("m_Ih", "m_Ih", 7, 1, 0.8, 0.9, 2)

        GraphWin_1a.addexpr("m_Im", "m_Im", 8, 1, 0.8, 0.9, 2)

        GraphWin_1a.addexpr("m_Kv3_1", "m_Kv3_1", 9, 1, 0.8, 0.9, 2)

        GraphWin_1a.addexpr("z_SK", "z_SK", 11, 1, 0.8, 0.9, 2)
        
        graphList[0].append(GraphWin_1a)
    }

    GraphWin_2 = new Graph(0)
    {GraphWin_2.size(0, tstop,0,0.005)}
    {GraphWin_2.view(0, 0, tstop, 0.005, 80, 330, 330, 250)}
    {
        GraphWin_2.addexpr("cai", "cai", 1, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_2)
    }

    GraphWin_3 = new Graph(0)
    {GraphWin_3.size(0, tstop,-100,100)}
    {GraphWin_3.view(0, 70, tstop, 60, 80, 330, 330, 250)}
    {
        GraphWin_3.addexpr("eca", "eca", 1, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_3)
    }
}

{run()}

strdef timeFilename


f_Soma_v = new File()
strdef filename
{sprint(filename, "Soma.dat")}
f_Soma_v.wopen(filename)
Soma_v.printf(f_Soma_v)
f_Soma_v.close()



{ sprint(timeFilename, "%s",  "time.dat")}
{ f_time.wopen(timeFilename) }
{ v_time.printf(f_time) }
{ f_time.close() }

objref f_Soma_si
f_Soma_si = new File()
{ f_Soma_si.wopen("Soma.si.dat") }
for i=0, Soma_v.size()-1 {
   f_Soma_si.printf("%f\t%f\n", v_time.x[i]/1000, Soma_v.x[i]/1000)
}
{ f_Soma_si.close() }


objref f_Soma_ca
f_Soma_ca = new File()
{ f_Soma_ca.wopen("Soma.ca.dat") }
for i=0, Soma_ca.size()-1 {
   f_Soma_ca.printf("%f\t%f\n", v_time.x[i]/1000, Soma_ca.x[i])
}
{ f_Soma_ca.close() }



if (usegui==1) {
    //   This code pops up a simple Run Control

    {
    xpanel("RunControl", 0)
    v_init = -60.0
    xbutton("Init & Run","run()")
    xbutton("Stop","stoprun=1")
    t = 0
    xvalue("t","t", 2 )
    xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
     xvalue("dt","dt", 1,"setdt()", 0, 1 )
    xpanel(80,80)
    }
}

forall psection()
