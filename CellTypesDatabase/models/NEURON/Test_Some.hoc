usegui = 1

{load_file("stdlib.hoc")}
{load_file("stdgui.hoc")}


create Soma
access Soma

celsius = 26

Soma {pt3dclear() pt3dadd(0.0, 0, 0.0, 9.923) pt3dadd(0.0, 9.923, 0.0, 9.923)}

define_shape()

forall Ra = 63.36

insert pas
{ g_pas=0.000153169 }
{ e_pas=-80 }

insert Kv2like
{gbar_Kv2like = 0.003}
{gbar_Kv2like = 0}
insert k_ion 
{ ek=-107}

proc initialiseValues0() {

    forall  v = -80

}

objref fih0
{fih0 = new FInitializeHandler(0, "initialiseValues0()")}

objref stim1 
objref stim2 


Soma {
    stim1 = new IClamp(0.5)
    stim1.del = 100.0
    stim1.dur = 100.0
    stim1.amp = -0.01
    
    stim2 = new IClamp(0.5)
    stim2.del = 300.0
    stim2.dur = 100.0
    stim2.amp = 0.05
}



tstop = 600.0
dt = 0.001


objref v_time
objref f_time

v_time = new Vector()
{ v_time.record(&t) }
//{ v_time.resize(70001) } // false
f_time = new File()


objref Soma_v
{ Soma_v = new Vector() }
{ Soma_v.record(&Soma.v(0.5))} 

objref v_m
{ v_m = new Vector() }
{ v_m.record(&Soma.m_Kv2like(0.5))} 
objref v_h1
{ v_h1 = new Vector() }
{ v_h1.record(&Soma.h1_Kv2like(0.5))} 
objref v_h2
{ v_h2 = new Vector() }
{ v_h2.record(&Soma.h2_Kv2like(0.5))} 


objref GraphWin_0
objref GraphWin_1
objref GraphWin_2
objref GraphWin_3

if (usegui==1) {
    GraphWin_0 = new Graph(0)
    {GraphWin_0.size(0, tstop,-110.0,50.0)}
    {GraphWin_0.view(0, -110.0, tstop, 160.0, 80, 330, 330, 250)}
    {
        GraphWin_0.addexpr("Soma.v", "Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_0)
    }

    GraphWin_1 = new Graph(0)
    {GraphWin_1.size(0, tstop,-0.1,1.1)}
    {GraphWin_1.view(0, -0.1, tstop, 1.2, 80, 330, 330, 250)}
    {
        GraphWin_1.addexpr("m", "m_Kv2like", 1, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("h1", "h1_Kv2like", 2, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("h2", "h2_Kv2like", 3, 1, 0.8, 0.9, 2)
        
        graphList[0].append(GraphWin_1)
    }

}

{run()}

strdef timeFilename


objref f_Soma_v
f_Soma_v = new File()
strdef filename
{sprint(filename, "Soma.some.dat")}
f_Soma_v.wopen(filename)
Soma_v.printf(f_Soma_v)
f_Soma_v.close()



{ sprint(timeFilename, "%s",  "time.dat")}
{ f_time.wopen(timeFilename) }
{ v_time.printf(f_time) }
{ f_time.close() }

objref f_Soma_si
f_Soma_si = new File()
{ f_Soma_si.wopen("Soma.some.si.dat") }
for i=0, Soma_v.size()-1 {
   f_Soma_si.printf("%f\t%f\n", v_time.x[i]/1000, Soma_v.x[i]/1000)
}
{ f_Soma_si.close() }


objref f_states
f_states = new File()
{ f_states.wopen("Soma.some.states.dat") }
for i=0, v_time.size()-1 {
   f_states.printf("%g\t %g\t  %g\t  %g\t  \n", v_time.x[i]/1000, v_m.x[i], v_h1.x[i], v_h2.x[i])
}
{ f_states.close() }


if (usegui==1) {
    //   This code pops up a simple Run Control

    {
    xpanel("RunControl", 0)
    v_init = -60.0
    xbutton("Init & Run","run()")
    xbutton("Stop","stoprun=1")
    t = 0
    xvalue("t","t", 2 )
    xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
     xvalue("dt","dt", 1,"setdt()", 0, 1 )
    xpanel(80,80)
    }
}

forall psection()
